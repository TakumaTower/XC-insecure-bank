name: Aqua workflow demo

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  IMAGE_NAME: takumatower/xc_test:demo2

jobs:
  aqua:
    name: Aqua code scanner 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup pipeline enforcer
        uses: aquasecurity/pipeline-enforcer-action@main
        env:
          CSPM_URL: https://asia-1.api.cloudsploit.com
          AQUA_URL: https://api.asia-1.supply-chain.cloud.aquasec.com
        with:
          aqua-key: ${{ secrets.AQUA_KEY }}
          aqua-secret: ${{ secrets.AQUA_SECRET }}
          
      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --scanners config,vuln,secret --sast --reachability --debug .
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable reachability scanning, add: --reachability
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ github.token }}
          AQUA_URL: https://api.asia-1.supply-chain.cloud.aquasec.com
          CSPM_URL: https://asia-1.api.cloudsploit.com
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          # For http/https proxy configuration add env vars: HTTP_PROXY/HTTPS_PROXY, CA-CRET (path to CA certificate)
          
            # The docker image name:tag of the newly built image
            # --artifact-path "my-image-name:${{ env.tag-version }}" 
            # OR the path to the root folder of your project. I.e my-repo/my-app 
            # --artifact-path "${{env.MY_APP_ROOT}}"
            
      - name: SBOM Generation
        run: |
          export BILLY_SERVER=https://billy.asia-1.codesec.aquasec.com
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum ; then
          echo "install.sh checksum failed"
          exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate \
            --access-token "${{ secrets.GITHUB_TOKEN }}" \
            --aqua-key "${{ secrets.AQUA_KEY }}" \
            --aqua-secret "${{ secrets.AQUA_SECRET }}" \
            --cspm-url https://asia-1.api.cloudsploit.com \
            --artifact-path "$GITHUB_WORKSPACE"
            
# More name: test  2    
# build:
#    runs-on: ubuntu-latest
#   steps:
#   - uses: actions/checkout@v3
#   - name: Build the Docker image
#     run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  build:
    name: Build, Scan, and Push Docker image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME
      
    - name: Aqua Image Scanner
      run: |
        docker image ls 
        docker login registry.aquasec.com -u "${{ secrets.AQUA_USER }}" -p "${{ secrets.AQUA_PASSWORD }}"
        docker pull registry.aquasec.com/scanner:2311.1.9
        docker run -v /var/run/docker.sock:/var/run/docker.sock registry.aquasec.com/scanner:2311.1.9 scan -w /tmp --host "${{ secrets.AQUA_HOST }}" --token "${{ secrets.AQUA_TOKEN }}" --show-negligible --local takumatower/xc_test:demo2 --htmlfile /tmp/out.html --jsonfile /tmp/out.json > /dev/null

    - name: Push Docker image to repository
      run: |
        docker login --username "${{ secrets.DOCKER_USERNAME }}" --password "${{ secrets.DOCKER_PASSWORD }}"
        docker push $IMAGE_NAME
